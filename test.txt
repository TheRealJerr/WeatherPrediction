#include <vector>
#include <iostream>
#include <asio.hpp>

using asio::ip::tcp;

// 接收二进制数据
std::vector<char> receive_message(tcp::socket& socket) {
    std::vector<char> buffer(4096); // 预分配缓冲区
    asio::error_code error;
    
    // 读取固定长度的头部（假设头部包含消息长度）
    size_t header_length = 4;
    asio::read(socket, asio::buffer(buffer.data(), header_length), error);
    if (error) throw std::runtime_error("读取头部失败");
    
    // 解析消息长度
    uint32_t message_length = 
        (buffer[0] << 24) | (buffer[1] << 16) | (buffer[2] << 8) | buffer[3];
    
    // 读取消息内容
    buffer.resize(header_length + message_length);
    asio::read(socket, asio::buffer(buffer.data() + header_length, message_length), error);
    if (error) throw std::runtime_error("读取消息失败");
    
    return buffer;
}

// 发送二进制数据
void send_message(tcp::socket& socket, const std::vector<char>& message) {
    asio::write(socket, asio::buffer(message), asio::transfer_all());
}